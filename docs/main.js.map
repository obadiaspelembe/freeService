{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/environments/environment.ts","./src/app/main-view/main-view.component.ts","./src/app/main-view/main-view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/export.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nexport const environment = {\n  production: false,\n  baseUrl: 'https://restcountries.eu/rest/v2/',\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Country } from './country';\nimport { ExportService } from '../services/export.service';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.css'],\n})\nexport class MainViewComponent implements OnInit {\n  countries: Country[] = [];\n  private httpClient: HttpClient;\n  currentPage: number = 0;\n  currentIndex: number = 0;\n\n  currentCountries: any[] = [];\n\n  totalPages: Number = 0;\n  totalItems: number = 0;\n\n  @ViewChild('countryTable') countryTable: ElementRef | undefined;\n\n  constructor(\n    private _httpClient: HttpClient,\n    private exportService: ExportService\n  ) {\n    this.httpClient = _httpClient;\n  }\n\n  ngOnInit(): void {\n    this.httpClient.get(`${environment.baseUrl}all`).subscribe((data) => {\n      this.countries = data as Country[];\n      this.totalItems = this.countries.length;\n      this.currentIndex = 10;\n      this.currentPage = 1;\n      this.currentCountries = this.countries.slice(0, this.currentIndex);\n      this.totalPages = Math.trunc(this.countries.length / 10);\n    });\n  }\n\n  getNext(): void {\n    if (this.currentPage < this.countries.length / 10) {\n      this.currentCountries = this.countries.slice(\n        this.currentIndex,\n        this.currentIndex + 10\n      );\n\n      this.currentIndex += 10;\n      this.currentPage += 1;\n    }\n  }\n\n  getPrevious(): void {\n    if (this.currentIndex >= 20) {\n      this.currentCountries = this.countries.slice(\n        this.currentIndex - 20,\n        this.currentIndex - 10\n      );\n      this.currentIndex -= 10;\n      this.currentPage -= 1;\n    }\n  }\n\n  search(e: any): void {\n    const searchRes = this.countries.filter((item) =>\n      item.name.toLowerCase().toString().includes(e.target.value.toLowerCase())\n    );\n\n    this.totalItems = searchRes.length;\n    this.currentIndex = 10;\n    this.currentPage = 1;\n    this.currentCountries = searchRes.slice(0, this.currentIndex);\n    this.totalPages = Math.trunc(searchRes.length / 10);\n  }\n\n  /**\n   * Function prepares data to pass to export service to create excel from Table DOM reference\n   *\n   */\n  exportElmToExcel(): void {\n    if (this.countryTable)\n      this.exportService.exportTableElmToExcel(\n        this.countryTable,\n        'countries-xlsx'\n      );\n  }\n  exportElmToCSV(): void {\n    if (this.countryTable)\n      this.exportService.exportTableElmToExcel(\n        this.countryTable,\n        'countries-csv',\n        '.csv'\n      );\n  }\n  exportElmToXML(): void {\n    if (this.countryTable)\n      this.exportService.exportTableElmToExcel(\n        this.countryTable,\n        'countries-xml',\n        '.xml'\n      );\n  }\n}\n","<div class=\"container\">\n  <div class=\"header\">\n    <h2>Bem-vindo ao FreeCountrie</h2>\n    <form>\n      <input\n        (keyup)=\"search($event)\"\n        placeholder=\"Pesquise pelo nome\"\n        type=\"text\"\n      />\n    </form>\n  </div>\n  <div class=\"body\">\n    <div>\n      <div>\n        <button class=\"xlsx\" (click)=\"exportElmToExcel()\">Exportar XLSX</button>\n        <button class=\"csv\" (click)=\"exportElmToCSV()\">Exportar CSV</button>\n        <button class=\"xml\" (click)=\"exportElmToXML()\">Exportar XML</button>\n      </div>\n      <p>\n        Listando <strong>10 </strong> Items da página\n        <strong> {{ currentPage }} </strong> de\n        <strong>{{ totalPages }}</strong> Páginas\n      </p>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Capital</th>\n            <th>Regiäo</th>\n            <th>Subregiäo</th>\n            <th>Populaçäo</th>\n            <th>Área</th>\n            <th>Fuso horário</th>\n            <th>Nome nativo</th>\n            <th>Bandeira</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let country of currentCountries\">\n            <td>{{ country.name }}</td>\n            <td>{{ country.capital }}</td>\n            <td>{{ country.region }}</td>\n            <td>{{ country.subregion }}</td>\n            <td>{{ country.population }}</td>\n            <td>{{ country.area }}</td>\n            <td>{{ country.timezones[0] }}</td>\n            <td>{{ country.nativeName }}</td>\n            <td><img src=\"{{ country.flag }}\" width=\"14\" /></td>\n            <td><a href=\"{{ country.flag }}\">Ver Bandeira</a></td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"pagination\">\n        <button class=\"prev\" (click)=\"getPrevious()\">Anterior</button>\n        <button class=\"next\" (click)=\"getNext()\">Próximo</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Display None table for export -->\n  <table #countryTable style=\"display: none\">\n    <thead>\n      <tr>\n        <th>Nome</th>\n        <th>Capital</th>\n        <th>Regiäo</th>\n        <th>Subregiäo</th>\n        <th>Populaçäo</th>\n        <th>Área</th>\n        <th>Fuso horário</th>\n        <th>Nome nativo</th>\n        <th>Bandeira</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let country of countries\">\n        <td>{{ country.name }}</td>\n        <td>{{ country.capital }}</td>\n        <td>{{ country.region }}</td>\n        <td>{{ country.subregion }}</td>\n        <td>{{ country.population }}</td>\n        <td>{{ country.area }}</td>\n        <td>{{ country.timezones[0] }}</td>\n        <td>{{ country.nativeName }}</td>\n        <td>{{ country.flag }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dev-challenge';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MainViewComponent } from './main-view/main-view.component';\nimport { ExportService } from './services/export.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, \n    AppRoutingModule\n  ],\n  providers: [ExportService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, ElementRef } from '@angular/core';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable()\nexport class ExportService {\n  constructor() {}\n\n  /**\n   * Creates excel from the table element reference.\n   *\n   * @param element DOM table element reference.\n   * @param fileName filename to save as.\n   */\n  public exportTableElmToExcel(\n    element: ElementRef,\n    fileName: string,\n    extension?: string\n  ): void {\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element.nativeElement);\n    // generate workbook and add the worksheet\n    const workbook: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, ws, 'Sheet1');\n    // save to file\n    XLSX.writeFile(workbook, `${fileName}${extension ?? EXCEL_EXTENSION}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainViewComponent } from './main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainViewComponent,\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}